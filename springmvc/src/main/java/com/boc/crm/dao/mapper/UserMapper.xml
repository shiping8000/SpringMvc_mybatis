<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.boc.crm.dao.UserMapper" > 

	<!-- WARNING - This element is automatically generated by CSP , do not modify. -->
	<resultMap id="BaseResultMap" type="com.boc.crm.domain.User" >
		<result column="id" property="id"/>
		<result column="user_name" property="userName"/>
		<result column="password" property="password"/>
		<result column="age" property="age"/>
		<result column="sex" property="sex"/>
	</resultMap>
       
	<!-- t_user - This element is automatically generated by CSP, do not modify. -->
	<sql id="Base_Column_List" >
		 id,user_name,password,age,sex
	</sql>
   
	<!-- t_user table all fields -->
	<sql id="Base_Column_List_Alias">
		 t.id,t.user_name,t.password,t.age,t.sex
	</sql>


	<!-- WARNING - This element is automatically generated by CSP, do not modify. -->
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="example.orCriteria" item="criteria" separator="or">
				<if test="criteria.notEmpty">
					<trim prefix=" (" prefixOverrides="AND" suffix=") " >
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.isNoValue">
									AND ${criterion.condition}
								</when>
								<when test="criterion.isSingleValue">
									AND ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.isBetweenValue">
									AND ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.isListValue">
									AND ${criterion.condition}
										<foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
											 ${item} 
										</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	
	<sql id="Example_Where_Clause_Alias">
		<where>
			<foreach collection="example.orCriteria" item="criteria" separator="or">
				<if test="criteria.notEmpty">
					<trim prefix=" (" prefixOverrides="AND" suffix=") " >
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.isNoValue">
									AND t.${criterion.condition}
								</when>
								<when test="criterion.isSingleValue">
									AND t.${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.isBetweenValue">
									AND t.${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.isListValue">
									AND t.${criterion.condition}
										<foreach collection="criterion.value" item="item" open="(" close=")" separator=",">
											${item}
										</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>


	<!-- 插入记录 -->
	<insert id="insert" parameterType="Object" >
	 <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
		SELECT LAST_INSERT_ID()
	 </selectKey>
		insert into t_user(id,user_name,password,age,sex)
		values(#{id},#{userName},#{password},#{age},#{sex})
	</insert>


	<!-- WARNING - This element is automatically generated by  do not modify. -->
	<insert id="insertSelective" parameterType="Object">
		  <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
			SELECT LAST_INSERT_ID()
		  </selectKey>
		insert into t_user		<trim prefix="(" suffix=")" suffixOverrides=",">			<if test="id != null">id,</if>			<if test="userName != null">user_name,</if>			<if test="password != null">password,</if>			<if test="age != null">age,</if>			<if test="sex != null">sex,</if>		</trim>		<trim prefix="VALUES (" suffix=")" suffixOverrides=",">	 		<if test="id != null">#{id},</if>	 		<if test="user_name != null">#{userName},</if>	 		<if test="password != null">#{password},</if>	 		<if test="age != null">#{age},</if>	 		<if test="sex != null">#{sex},</if>		</trim>
	</insert>



	<!-- 删除记录 -->
	<delete id="deleteByPrimaryKey" >
		delete from t_user where id = #{id}
	</delete>

	<delete id="deleteByExample" >
		<if test="example != null">
			delete from t_user
			<include refid="Example_Where_Clause"/>
		</if>
	</delete>

	<!-- 根据id，修改记录-->  
	<update id="updateByPrimaryKey" parameterType="Object" >
	  	update t_user set 
			user_name=#{userName},	password=#{password},	age=#{age},
			sex=#{sex} where id=#{id}
	</update>
	
	<update id="updateByPrimaryKeySelective" parameterType="Object" >
		update t_user
		<set> 
			<if test="userName != null  ">user_name=#{userName},</if>
			<if test="password != null  ">password=#{password},</if>
			<if test="age != null  ">age=#{age},</if>
			<if test="sex != null  ">sex=#{sex},</if>
		</set> 
		where id=#{id}
	</update>
	
	<update id="updateByExample" >
		<if test="example != null"> 	
		 update t_user
			 set 
				user_name=#{entity.userName},password=#{entity.password},
				age=#{entity.age},sex=#{entity.sex}
			<include refid="Example_Where_Clause" /> 	
		</if>
	</update>
	
	<update id="updateByExampleSelective">
		<if test="example != null"> 	
			update t_user
			 <set> 
				<if test="entity.userName != null  ">user_name=#{entity.userName},</if>
				<if test="entity.password != null  ">password=#{entity.password},</if>
				<if test="entity.age != null  ">age=#{entity.age},</if>
				<if test="entity.sex != null  ">sex=#{entity.sex},</if>
			</set> 
			<include refid="Example_Where_Clause" /> 	
		</if>
	</update>
	
	
	<select id="getById" resultMap="BaseResultMap">
		select <include refid="Base_Column_List" /> 
	 from t_user where id = #{id}
	</select>
	
	<select id="getObjectByExample" resultMap="BaseResultMap" >
		SELECT <include refid="Base_Column_List_Alias" />
		FROM t_user t
		<if test="example != null">
			<include refid="Example_Where_Clause_Alias"/>
		</if>
	</select>
	
 	<select id="getListByExample" resultMap="BaseResultMap" >
		SELECT <if test="example != null and example.distinct">distinct</if> <include refid="Base_Column_List_Alias" />
		FROM t_user t
		<if test="example != null">
			<include refid="Example_Where_Clause_Alias"/>
		</if>
		<if test="example != null and example.orderByClause != null and example.orderByClause != ''">
			ORDER BY ${example.orderByClause}
		</if>
	</select>
	
	
	<select id="getCountByExample" resultType="java.lang.Long" >
		SELECT COUNT(1) FROM t_user t
		<if test="example != null">
			<include refid="Example_Where_Clause_Alias"/>
		</if>
	</select>
	
	<select id="getMapListByExample" resultType="map">
		SELECT <if test="example != null and example.distinct">distinct</if>
			<foreach collection="props" item="item" separator=",">
				t.${@com.core.mybatis.Example@prop2Column(item)}
			</foreach>
		FROM t_user t
		<if test="example != null">
			<include refid="Example_Where_Clause_Alias"/>
		</if>
		<if test="example != null and example.orderByClause != null and example.orderByClause != ''">
			ORDER BY ${example.orderByClause}
		</if>
	</select>
	


</mapper>   
